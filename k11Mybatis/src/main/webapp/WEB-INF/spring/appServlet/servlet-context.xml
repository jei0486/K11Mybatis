<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />
	<resources mapping="/images/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<context:component-scan base-package="com.kosmo.k11mybatis" />
	
	
	<!--  
	DB 연결
	SPRING JDBC를 사용하기 위한 빈 생성
	해당 XML 파일에서 JDBC 연결을 위한 빈을 생성한 후 컨트롤러에서 자동 주입(AUTOWIRED) 받아서 사용하게된다.
	
	JDBCTemplate Bean은 필요없다. 
	-->
	<beans:bean name="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<beans:property name="driverClassName" value="oracle.jdbc.OracleDriver" />
		<beans:property name="url" value="jdbc:oracle:thin:@localhost:1521:orcl" />
		<beans:property name="username" value="kosmo" />
		<beans:property name="password" value="1234" />
	</beans:bean>
	
	
	<!-- Mybatis 빈 생성 
		:) DB 연결을 기반으로 ref="dataSource" sqlSessionFactory bean을 생성하고
				sqlSession bean 생성
	-->
	<!--  
	org.mybatis.spring 패키지에서 SqlSessionFactoryBean.class-->
	
	<beans:bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<beans:property name="dataSource" ref="dataSource" />
		<beans:property name="mapperLocations" value="classpath:mybatis/mapper/*.xml" />
	</beans:bean>
	<!--  
	org.mybatis.spring 패키지에서 SqlSessionTemplate.class
	
	beans:constructor-arg 는 인자생성자
	-->
	<beans:bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<beans:constructor-arg index="0" ref="sqlSessionFactory" />
	</beans:bean>
	
</beans:beans>
